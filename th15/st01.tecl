anim { "enemy.anm"; "st01enm.anm"; "idk.anm";}
ecli { "default.ecl"; "st01bs.ecl"; "st01mbs.ecl"; "st01mbs2.ecl"; }

void MainBossSpell();

void MainMBossSpell();



void LogoEnemy()
{
    wait(1410);
    stageLogo();
    return;
}

void MainBoss()
{
    dialogWait();
    enmCreateA("Boss", 144.0f, -16.0f, 40, 1000, 1);
    dialogWait();
+1: //1
    bossWait();
    setChapter(81);
+60: //61
    dialogRead(1);
    dialogWait();
    return;
    return;
}

void MainBossDebug()
{
+10: //10
    dialogRead(0);
    @MainBoss();
    return;
}

void MainBossDebug2()
{
+10: //10
    dialogRead(-1);
    @MainBoss();
    return;
}

void MainFront()
{
    @MainSub00();
    wait(320);
    setChapter(1);
    return;
}

void MainLatter()
{
    return;
}

void MainMBossDebug()
{
    setChapter(22);
    enmCreateA("MBoss", 112.0f, -32.0f, 40, 1000, 1);
    goto MainMBossDebug_148 @ 0;
MainMBossDebug_128:
    wait(1000);
MainMBossDebug_148:
    if (1) goto MainMBossDebug_128 @ 0;
    return;
}

void MainMsgDebug()
{
    callSTD(1);
+10: //10
    dialogRead(0);
    dialogWait();
+1: //11
    dialogWait();
+60: //71
    dialogRead(1);
    dialogWait();
    goto MainMsgDebug_184 @ 4071;
MainMsgDebug_168:
+4000: //4071
    nop();
MainMsgDebug_184:
    if (1) goto MainMsgDebug_168 @ 71;
    return;
}

void MainSub00()
{
    var A, B, C, D, E;
    %A = _f(-192);
    $B = 8;
    goto MainSub00_432 @ 0;
MainSub00_140:
    enmCreate("GirlRedA01", %A - _f(32), -16.0f, 100, 1000, 1);
    enmCreate("GirlBlueA01e", %A, -28.0f, 100, 1000, 1);
    enmCreate("GirlRedA01", %A + _f(32), -40.0f, 100, 1000, 1);
    wait(30);
MainSub00_432:
    if ($B--) goto MainSub00_140 @ 0;
    %A = _f(192);
    $C = 8;
    goto MainSub00_872 @ 0;
MainSub00_580:
    enmCreateM("GirlRedA01", %A - _f(32), -40.0f, 100, 1000, 1);
    enmCreateM("GirlBlueA01e", %A, -28.0f, 100, 1000, 1);
    enmCreateM("GirlRedA01", %A + _f(32), -16.0f, 100, 1000, 1);
    wait(30);
MainSub00_872:
    if ($C--) goto MainSub00_580 @ 0;
    wait(100);
    $D = 7;
    goto MainSub00_1708 @ 0;
MainSub00_1000:
    %A = _f(-192);
    enmCreate("GirlBlueA02", %A - _f(32), -16.0f, 100, 1000, 1);
    enmCreate("GirlRedA02e", %A, -28.0f, 100, 1000, 1);
    enmCreate("GirlBlueA02", %A + _f(32), -40.0f, 100, 1000, 1);
    wait(30);
    %A = _f(192);
    enmCreateM("GirlBlueA02", %A - _f(32), -40.0f, 100, 1000, 1);
!NHL
    enmCreateM("GirlRedA02e", %A, -28.0f, 100, 1000, 1);
!E
    enmCreateM("GirlRedA02", %A, -28.0f, 100, 1000, 1);
!*
    enmCreateM("GirlBlueA02", %A + _f(32), -16.0f, 100, 1000, 1);
    wait(30);
MainSub00_1708:
    if ($D--) goto MainSub00_1000 @ 0;
    $E = 8;
    goto MainSub00_1816 @ 0;
MainSub00_1816:
    if ($E--) goto MainSub00_1816 @ 0;
    return;
}

void MapleEnemy()
{
    var A;
    flagSet(32);
    $A = 60;
    goto MapleEnemy_164 @ 0;
MapleEnemy_120:
    anmPlayAbs(1, 102);
    wait(4);
MapleEnemy_164:
    if ($A--) goto MapleEnemy_120 @ 0;
    goto MapleEnemy_276 @ 0;
MapleEnemy_232:
    anmPlayAbs(1, 102);
    wait(5);
MapleEnemy_276:
    if (1) goto MapleEnemy_232 @ 0;
    delete();
}


void main()
{
    flagSet(32);
    wait(1);
    setChapter(0);
    debug22(1, "MainMBossDebug");
    debug22(2, "MainBossDebug");
    debug22(3, "MainBossDebug2");
    debug22(4, "MainMsgDebug");
    debug22(5, "MainLatter");
    @LogoEnemy() async;
+60: //60
    nop();
	dialogRead(5);
	wait(300);
    @MainFront();
    enmKillAll();
    etClear(640.0f);
    setChapter(2);
    wait(2);
	dialogRead(6);
	dialogWait();
    enmCreateA("MBoss", 192.0f, -32.0f, 40, 1000, 1);
    wait(160);
    @MainLatter();
    etClear(640.0f);
	enmKillAll();
    wait(300);
    setChapter(41);
    // wait(60);
	// etNew(0);
	// etAim(0, 0);
	// etSprite(0, 12, 1);
	// etCount(0, [-9905], 1);
	// etAngle(0, 0f, rad(5));
	// etSpeed(0, 3f, 3f);
	// etOn(0);
	// anmPlay(1, 197);
	// anmPlay(4, 0);
	// enmCreate("GirlB06", 0f, 128f, 10000000, 100, 1);
	//0x4E7400C score (memory adress)
	//0x42eed1 GF7 (function)
	// GF7 = 999999999f;
    dialogRead(0);
    @MainBoss();
	while(1)
	{	
		wait(1000);
+60:
	}
    delete();
}

void main1()
{
	flagSet(3);
	enmCreate("testLance", 0f, 120f, 1000, 1000, 1);
	wait(1000000);
}

void testLance()
{
	anmSelect(2);
	anmSetMain(0, 0);
	etNew(0);
	etAim(0, 0);
	
	etSprite(0, 29, 1); //29 -> sprite de bullet dÃ©fini selon la liste
	//1 -> couleur, ici rouge
	
	etCount(0, 10, 5); //10 -> nombre de bullet des "lignes"
	//5 -> nombre de bullet des "colonnes"
	
	etSpeed(0, 2f, 4f); //0 -> id du pattern;
	//2f -> vitesse minimale bullet des "colonnes"
	//4f -> vitesse maximale des bullet des "colonnes"
	 
	wait(100000);
}
