anim { "enemy.anm"; "st01enm.anm"; "idk.anm";}
ecli { "default.ecl"; "st01bs.ecl"; "st01mbs.ecl"; "st01mbs2.ecl"; }

void MainBossSpell();

void MainMBossSpell();



void LogoEnemy()
{
    wait(1410);
    stageLogo();
    return;
}

void Fairy1red()
{
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, 5);
	Fairy1(0f);
}
void Fairy1blue()
{
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, 0);
	Fairy1(30f);
}
void Fairy1redM()
{
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, 5);
	Fairy1M(0f);
}
void Fairy1blueM()
{
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, 0);
	Fairy1M(35f);
}

void Fairy1(float A)
{
	moveBezier(400, 0f, -600f-A, 300f, 200f-A, -100f, 800f-A);
	wait(400);
	flagClear(4);
	wait(1000);
}

void Fairy1M(float A)
{
	moveBezier(400, 0f, -600f-A, -300f, 200f-A, 100f, 800f-A);
	wait(400);
	flagClear(4);
	wait(1000);
}

void Fairy2(float A)
{
	moveBezier(400, 0f, 300f-A, 300f, 200f-A, -100f, -400f-A);
	wait(400);
	flagClear(4);
	wait(1000);
}

void Fairy2M(float A)
{
	moveBezier(400, 0f, 300f-A, -300f, 200f-A, 100f, -400f-A);
	wait(400);
	flagClear(4);
	wait(1000);
}
void Fairy2red()
{
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, 5);
	Fairy2(0f);
}
void Fairy2blue()
{
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, 0);
	Fairy2(30f);
}
void Fairy2redM()
{
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, 5);
	Fairy2M(0f);
}
void Fairy2blueM()
{
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, 0);
	Fairy2M(30f);
}
void MainBoss()
{
    dialogWait();
    enmCreateA("Boss", 144.0f, -16.0f, 40, 1000, 1);
    dialogWait();
+1: //1
    bossWait();
    setChapter(81);
+60: //61
    dialogRead(1);
    dialogWait();
    return;
    return;
}

void MainBossDebug()
{
+10: //10
    dialogRead(0);
    @MainBoss();
    return;
}

void MainBossDebug2()
{
+10: //10
    dialogRead(-1);
    @MainBoss();
    return;
}

void MainFront()
{
    @MainSub00();
    wait(320);
    setChapter(1);
    return;
}

void MainLatter()
{
    return;
}

void MainMBossDebug()
{
    setChapter(22);
    enmCreateA("MBoss", 112.0f, -32.0f, 40, 1000, 1);
    goto MainMBossDebug_148 @ 0;
MainMBossDebug_128:
    wait(1000);
MainMBossDebug_148:
    if (1) goto MainMBossDebug_128 @ 0;
    return;
}

void MainMsgDebug()
{
    callSTD(1);
+10: //10
    dialogRead(0);
    dialogWait();
+1: //11
    dialogWait();
+60: //71
    dialogRead(1);
    dialogWait();
    goto MainMsgDebug_184 @ 4071;
MainMsgDebug_168:
+4000: //4071
    nop();
MainMsgDebug_184:
    if (1) goto MainMsgDebug_168 @ 71;
    return;
}

void MainSub00()
{
	times(20)
	{
		enmCreate("Fairy2red", -230f, 135f, 50, 100, 1);
		enmCreate("Fairy2blue", -230f, 90f, 50, 100, 2);
		wait(23);
	}
	times(20)
	{
		enmCreate("Fairy2redM", 230f, 135f, 50, 100, 1);
		enmCreate("Fairy2blueM", 230f, 90f, 50, 100, 2);
		wait(23);
	}
	times(25)
	{
		enmCreate("Fairy1red", -230f, 235f, 50, 100, 1);
		enmCreate("Fairy1blue", -230f, 205f, 50, 100, 2);
		enmCreate("Fairy1redM", 230f, 235f, 50, 100, 1);
		enmCreate("Fairy1blueM", 230f, 205f, 50, 100, 2);
		wait(23);
	}
}

void MapleEnemy()
{
    var A;
    flagSet(32);
    $A = 60;
    goto MapleEnemy_164 @ 0;
MapleEnemy_120:
    anmPlayAbs(1, 102);
    wait(4);
MapleEnemy_164:
    if ($A--) goto MapleEnemy_120 @ 0;
    goto MapleEnemy_276 @ 0;
MapleEnemy_232:
    anmPlayAbs(1, 102);
    wait(5);
MapleEnemy_276:
    if (1) goto MapleEnemy_232 @ 0;
    delete();
}


void main1()
{
    flagSet(32);
    wait(1);
    setChapter(0);
    debug22(1, "MainMBossDebug");
    debug22(2, "MainBossDebug");
    debug22(3, "MainBossDebug2");
    debug22(4, "MainMsgDebug");
    debug22(5, "MainLatter");
    @LogoEnemy() async;
+60: //60
    nop();
	dialogRead(5);
	wait(300);
    @MainFront();
    enmKillAll();
    etClear(640.0f);
    setChapter(2);
    wait(2);
	dialogRead(6);
	dialogWait();
    enmCreateA("MBoss", 192.0f, -32.0f, 40, 1000, 1);
    wait(160);
    @MainLatter();
    etClear(640.0f);
	enmKillAll();
    wait(300);
    setChapter(41);
    // wait(60);
	// etNew(0);
	// etAim(0, 0);
	// etSprite(0, 12, 1);
	// etCount(0, [-9905], 1);
	// etAngle(0, 0f, rad(5));
	// etSpeed(0, 3f, 3f);
	// etOn(0);
	// anmPlay(1, 197);
	// anmPlay(4, 0);
	// enmCreate("GirlB06", 0f, 128f, 10000000, 100, 1);
	//0x4E7400C score (memory adress)
	//0x42eed1 GF7 (function)
	// GF7 = 999999999f;
    dialogRead(0);
    @MainBoss();
	while(1)
	{	
		wait(1000);
+60:
	}
    delete();
}

void main()
{
	flagSet(3);
	enmCreate("testLance", -192f, 320f, 1000, 1000, 1);
	wait(1000000);
}


void testLance()
{
	float x;
	anmSelect(2);
	anmSetMain(0, 0);
	etNew(0);
	etAim(0, 0);
	
	etSprite(0, 8, 2); //29 -> sprite de bullet dÃ©fini selon la liste
	//1 -> couleur, ici rouge
	
	etCount(0, 1, 1); //10 -> nombre de bullet des "lignes"
	//5 -> nombre de bullet des "colonnes"
	
	etSpeed(0, 0f, 0f); //0 -> id du pattern;
	//2f -> vitesse minimale bullet des "colonnes"
	//4f -> vitesse maximale des bullet des "colonnes" ((((x - 0.4f)*(x - 0.4f) / 0.36f) - 0.444444f) / 0.555556f)
	x = 0.4f;
	times(384)
	{
		movePos(ABS_X + 1f, ABS_Y - x*x);
		x += 0.002f;
		etAngle(0, ABS_ANGLE, 0f);
		wait(1);
		etOn(0);
	}
	wait(100000);
}