anim { "enemy.anm"; "st02enm.anm"; "special.anm"; }
ecli { "default.ecl"; "st02bs.ecl"; "st02mbs.ecl"; }
#include "main.tecl"
void MainBossSpell();

void MainMBossSpell();

//Test
void Attackgirl()
{
	ins_569(1);
	dropExtra(2, 1);
	//flagSet(12);
	//anmSelect(2);
	//anmSetMain(0, 0);
	wait(10);
	@Attack_at();
}

void Attack_at()
{
	etNew(0);
	etAim(0, 2);
	etCount(0, 1, 1);
	etSprite(0, 12, 2);
	etSpeed(0, 3f, 3f);
	etEx(0, 0, EX_ANIM, 0, NEG, NEGF, NEGF);
	while(1)
	{
		etAngle(0, RANDF2*(rad(30):rad(30):rad(30):rad(40)), 0f);
		etOn(0);
		wait(23:17:14:10);
	}
}

//Test
void SniperGirl()
{
	ins_569(1);
	dropExtra(2, 2);
	dropExtra(1, 3);

	@Sniper_at() async;
	flagClear(8);
	flagClear(4);
	wait(400);
	moveVel(F0, 0.5f);
	wait(1000);
}

void Sniper_at()
{
	etNew(0);
	etAim(0, 2);
	etCount(0, 1:1:6:6, 6:8:8:8);
	etSprite(0, 13, 4);
	etSpeed(0, 1f, 6f:8f:8f:8f);
	etEx(0, 0, EX_ANIM, 2, NEG, NEGF, NEGF);
	etEx(0, 1, EX_DIST, NEG, NEG, NEGF, NEGF);
	playSound(30);
	anmPlay(1, EFF_CHARGE_PURPLE+10);
	wait(60);
!HL
	SniperHL_at() async;
!*
	while(1)
	{
		anmPlay(1, EFF_EXPLODE_PURPLE+10);
		playSound(6);
		etOn(0);
		playSound(30);
		wait(60);
		anmPlay(1, EFF_CHARGE_PURPLE+10);
		wait(60);
	}
}

void SniperHL_at(){
	etNew(1);
	etAim(1, 0);
	etCount(1, 0:0:2:4, 0:0:8:8);
	etSprite(1, 13, 4);
	etSpeed(1, 1f, 6f:8f:8f:8f);
	etEx(1, 0, EX_ANIM, 2, NEG, NEGF, NEGF);
	etEx(1, 1, EX_DIST, NEG, NEG, NEGF, NEGF);
	etAngle(1, 0f, rad(20));
	while(1)
	{
		etOn(1);
		wait(120);
	}
}

void OpenerGirl()
{
	ins_569(1);
	flagSet(16);
	anmSelect(2);
	anmSetMain(0, 167);
	movePosTime(30, 0, 0f, 100f);
	wait(480);
	flagClear(16);
	//@Open_at();
	wait(10000);
}

void GirlA01()
{
    ins_569(1);
	flagSet(12);
	anmSelect(2);
	anmSetMain(0, 0);
	dropMain(1);
    dropExtra(1, 2);
    dropExtra(2, 1);
    moveVel(rad(0), 3f);
	wait(20);
	moveVelTime(90, 0, rad(-180), 4f);
	flagClear(12);
	@GirlA_at();

	wait(1800);
}
void GirlA02()
{
    ins_569(1);
	flagSet(12);
	anmSelect(2);
	anmSetMain(0, 0);
	dropMain(1);
    dropExtra(1, 2);
    dropExtra(2, 1);
    moveVel(rad(180), 3f);
	wait(20);
	moveVelTime(90, 0, rad(360), 4f);
	flagClear(12);
	@GirlA_at();
	wait(1800);
}
void GirlA03()
{
    ins_569(1);
	flagSet(12);
	anmSelect(2);
	dropMain(1);
    dropExtra(1, 1);
    dropExtra(2, 2);
	anmSetMain(0, 5);
    moveVel(rad(0), 2f);
	wait(20);
	moveVelTime(90, 0, rad(-180), 2f);
	@GirlA_at2(-1f);
	wait(1800);
}

void GirlA04()
{
    ins_569(1);
	anmSelect(2);
	flagSet(12);
	anmSetMain(0, 5);
	dropMain(1);
    dropExtra(1, 1);
    dropExtra(2, 2);
    moveVel(rad(180), 2f);
	wait(20);
	moveVelTime(90, 0, rad(360), 2f);
	flagClear(12);
	@GirlA_at2(1f);
	wait(1800);
}
void GirlA01_fear()
{
    ins_569(1);
	flagSet(12);
	anmSelect(2);
	anmSetMain(0, 0);
	dropMain(1);
    dropExtra(1, 2);
    dropExtra(2, 1);
    moveVel(rad(0), 3f);
	wait(20);
	moveVelTime(45, 0,  RANDF2*rad(45), 4f);
	flagClear(12);
	@GirlA_at() async;
	wait(1800);
}
void GirlA02_fear()
{
	ins_569(1);
	anmSelect(2);
	flagSet(12);
	anmSetMain(0, 5);
	dropMain(1);
    dropExtra(1, 2);
    dropExtra(2, 1);
    moveVel(rad(180), 3f);
	wait(20);
	moveVelTime(45, 0,  rad(180)+RANDF2*rad(45), 4f);
	flagClear(12);
	@GirlA_at() async;
	wait(1800);
}
void GirlA03_fear()
{
    ins_569(1);
	flagSet(12);
	anmSelect(2);
	anmSetMain(0, 0);
	dropMain(1);
    dropExtra(1, 1);
    dropExtra(2, 2);
    moveVel(rad(0), 2f);
	wait(20);
	moveVelTime(45, 0,  RANDF2*rad(45), 2f);
	flagClear(12);
	@GirlA_at2(1f) async;
	wait(1800);
}

void GirlA04_fear()
{
    ins_569(1);
	anmSelect(2);
	flagSet(12);
	anmSetMain(0, 5);
	dropMain(1);
    dropExtra(1, 1);
    dropExtra(2, 2);
    moveVel(rad(180), 2f);
	wait(20);
	moveVelTime(45, 0, rad(180)+RANDF2*rad(45), 2f);
	flagClear(12);
	@GirlA_at2(-1f) async;
	wait(1800);
}
void GirlA_at(){
	etNew(0);
	etAim(0, 2);
	etCount(0, 10, 1);
	etAngle(0, 0f, 0f);
	etSprite(0, 4, 2);
	etSpeed(0, 3f, 3.5f);
	etEx(0, 0, EX_ANIM, 0, NEG, NEGF, NEGF);
	wait(30);
	times(10)
	{
		etOn(0);
		wait(200:200:70:60);
	}
}

void GirlA_at2(float sign){
	etNew(0);
	etAim(0, 1);
	etCount(0, 1, 3);
	etAngle(0, ABS_ANGLE+rad(45)*sign, 0f);
	etSprite(0, 8, 0);
	etSpeed(0, 3f, 2f);
	etEx(0, 0, EX_ANIM, 0, NEG, NEGF, NEGF);
	wait(30);
	times(10)
	{
		etAngle(0, ABS_ANGLE+rad(60)*sign+RANDF2*rad(20), 0f);
		etOn(0);
		wait(50:40:30:30);
	}
}


void GirlB01()
{

	flagSet(12);
	anmSelect(2);
    anmSetMain(0, 25);
    anmSetSprite(1, 93);
	dropMain(2);
    dropExtra(1, 4);
	@GirlB_at() async;
	moveVel(rad(0), 3f);
	wait(10);
	moveVelTime(60, 1, rad(70), 3f);
	wait(60);
	moveVelTime(60, 0, rad(0), 3f);
	flagClear(12);
	wait(1000);
}

void GirlB02()
{
	flagSet(12);
	anmSelect(2);
    anmSetMain(0, 25);
    anmSetSprite(1, 93);
	dropMain(2);
    dropExtra(1, 4);
	@GirlB_at() async;
	moveVel(rad(180), 3f);
	wait(10);
	moveVelTime(60, 1, rad(110), 3f);
	wait(60);
	moveVelTime(60, 0, rad(180), 3f);
	flagClear(12);
	wait(1000);
}

void GirlB_at()
{
	float angle = 0f;
	int count = 6:8:10:15;
	float inc = rad(360)/_f(count);
	etNew(0);
	etAim(0, 1);
	etSpeed(0, 2f, 2.5f:3f:3f);
	etCount(0, 1, 1:2:3:3);
	etSprite(0, 12, 15);//to determine
	wait(30);
	etEx(0, 0, EX_ANIM, 1, NEG, NEGF, NEGF);
	while(1){
		angle = ANGLE_PLAYER;
		times(count){
			etAngle(0, angle, 0f:0f:rad(5):rad(5));
			etOn(0);
			angle += inc;
			wait(2:2:1:1);
		}
		wait(60:60:40:30);
	}
}


void GirlC01()
{
    ins_569(3);
    anmSelect(2);
    anmSetMain(0, 35);
    anmSetSprite(1, 93);
    dropMain(1);
    dropExtra(1, 1);
    dropExtra(2, 2);
    setHurtbox(32.0f, 32.0f);
    setHitbox(24.0f, 24.0f);
    moveVel(%ANGLE_PLAYER, 3.0f);
    moveVelTime(80, 1, 1.5707964f, 0.01f);
    @GirlC01_at();
    moveVel(-1.5707964f, 0.0f);
    moveVelTime(70, 1, -1.5707964f, 4.0f);
    wait(70);
    goto GirlC01_448 @ 0;
GirlC01_428:
    wait(1000);
GirlC01_448:
    if (1) goto GirlC01_428 @ 0;
    delete();
}

void GirlC01_at()
{
    var A, B, C, D;
    wait(60);
    etNew(0);
    etAim(0, 3);
    etSprite(0, 8, 6);
!E
    1;
!N
    5;
!H
    7;
!LO
    9;
!*
    etCount(0, [-1], 1);
    etAngle(0, 0.0f, 0.17453292f);
    etSpeed(0, 1.6f, 1.0f);
    etEx(0, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    etEx(0, 0, 4, 230, -999999, 0.013f, 1.5707964f);
    diffF(%B, 0.3f, 0.3f, 0.3f, 0.2f);
    $C = 3;
    goto GirlC01_at_972 @ 0;
GirlC01_at_480:
    diffF(%A, 1.0f, 1.0f, 1.0f, 1.0f);
    etAngle(0, %ANGLE_PLAYER, 0.0f);
    diffI($D, 6, 6, 12, 16);
    goto GirlC01_at_828 @ 0;
GirlC01_at_604:
    etSpeed(0, %A, 0.0f);
    %A = %A + %B;
    etOn(0);
!E
    8;
!N
    8;
!H
    6;
!LO
    5;
!*
    wait([-1]);
GirlC01_at_828:
    if ($D--) goto GirlC01_at_604 @ 0;
!E
    60;
!N
    60;
!H
    10;
!LO
    10;
!*
    wait([-1]);
GirlC01_at_972:
    if ($C--) goto GirlC01_at_480 @ 0;
    return;
}

void GirlC02()
{
    ins_569(3);
    anmSelect(2);
    anmSetMain(0, 35);
    anmSetSprite(1, 93);
    dropMain(1);
    dropExtra(1, 1);
    dropExtra(2, 2);
    setHurtbox(32.0f, 32.0f);
    setHitbox(24.0f, 24.0f);
    moveVel(0.7853982f, 3.0f);
    moveVelTime(80, 1, 0.0f, 0.5f);
    @GirlC02_at();
    moveVel(-1.5707964f, 0.0f);
    moveVelTime(70, 1, -0.3926991f, 4.0f);
    wait(70);
    goto GirlC02_448 @ 0;
GirlC02_428:
    wait(1000);
GirlC02_448:
    if (1) goto GirlC02_428 @ 0;
    delete();
}

void GirlC02_at()
{
    var A, B, C;
    wait(60);
    etNew(0);
    etAim(0, 3);
    etSprite(0, 8, 6);
!E
    1;
!N
    24;
!H
    24;
!LO
    24;
!*
    etCount(0, [-1], 1);
    etAngle(0, 0.0f, 0.17453292f);
    etSpeed(0, 0.3f, 1.0f);
    etEx(0, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    etEx(0, 0, 4, 230, -999999, 0.01f, -999999.0f);
    $B = 3;
    goto GirlC02_at_776 @ 0;
GirlC02_at_444:
    diffF(%A, 1.0f, 1.0f, 2.0f, 2.0f);
    etAngle(0, %ANGLE_PLAYER, 0.0f);
    diffI($C, 6, 6, 10, 16);
    goto GirlC02_at_712 @ 0;
GirlC02_at_568:
    etSpeed(0, %A, 0.0f);
    %A = %A + 0.3f;
    etOn(0);
    wait(8);
GirlC02_at_712:
    if ($C--) goto GirlC02_at_568 @ 0;
    wait(80);
GirlC02_at_776:
    if ($B--) goto GirlC02_at_444 @ 0;
    return;
}

void GirlTest()
{
    goto GirlTest_80 @ 0;
GirlTest_60:
    wait(1000);
GirlTest_80:
    if (1) goto GirlTest_60 @ 0;
    delete();
}

void LogoEnemy()
{
    wait(460);
    stageLogo();
    return;
}

void MainBoss()
{
    dialogWait();
    enmCreateA("Boss", 144.0f, -16.0f, 40, 1000, 1);
    dialogWait();
+1: //1
    bossWait();
    setChapter(81);
+60: //61
    dialogRead(1);
    dialogWait();
    return;
}

void MainBossDebug()
{
+10: //10
    dialogRead(0);
    @MainBoss();
    return;
}

void MainBossDebug2()
{
+10: //10
    dialogRead(-1);
    @MainBoss();
    return;
}

void MainFront()
{
    @MainSub00();
	setChapter(1);
    return;
}

void MainLatter()
{
    @MainSub01();
    @MainSub02();
	setChapter(3);
	@MainSub03();
	wait(1000);
    return;
}

void MainMBossDebug()
{
    setChapter(22);
    enmCreateA("MBoss", 112.0f, -32.0f, 40, 1000, 1);
    goto MainMBossDebug_148 @ 0;
MainMBossDebug_128:
    wait(1000);
MainMBossDebug_148:
    if (1) goto MainMBossDebug_128 @ 0;
    return;
}

void MainMsgDebug()
{
    callSTD(1);
+10: //10
    dialogRead(0);
    dialogWait();
+1: //11
    dialogWait();
+60: //71
    dialogRead(1);
    dialogWait();
    goto MainMsgDebug_184 @ 4071;
MainMsgDebug_168:
+4000: //4071
    nop();
MainMsgDebug_184:
    if (1) goto MainMsgDebug_168 @ 71;
    return;
}

void MainSub00()
{
	// enmCreate("OpenerGirl", 0f, -100f, 100, 500, 1);
	// wait(600);
	times(16)
	{
		enmCreate("GirlA01", -212f, 88f, 100, 500, 1);
		enmCreate("GirlA02", 212f, 88f, 100, 500, 1);
		+30:
	}
	times(16)
	{
		enmCreate("GirlA01", -212f, 88f, 100, 500, 1);
		enmCreate("GirlA02", 212f, 88f, 100, 500, 1);
		enmCreate("GirlA03", -212f, 128f, 100, 500, 2);
		enmCreate("GirlA04", 212f, 128f, 100, 500, 2);
		+30:
	}
	wait(30);
	times(16)
	{
		enmCreate("GirlA01_fear", -212f, 88f, 100, 500, 1);
		enmCreate("GirlA02_fear", 212f, 88f, 100, 500, 1);
		enmCreate("GirlA03_fear", -212f, 128f, 100, 500, 2);
		enmCreate("GirlA04_fear", 212f, 128f, 100, 500, 2);
		+30:
	}
	wait(60);
	times(16)
	{
		enmCreate("GirlB01", -212f, 128f, 100, 500, 1);
		enmCreate("GirlB02", 212f, 128f, 100, 500, 1);
		+30:
	}

	wait(200);
}

void MainSub01()
{
	MainSub01a() async;
	MainSub01b() async;
	wait(60);
	MainSub01c();
    return;
}
void MainSub01b(){
	times(7){
		F0 = rad(0);
		enmCreateA("Attackgirl01", -218f, 128f+RANDF2*10f, 50, 100, 1);
		wait(10);
	}
}
void MainSub01a(){
	times(7){
		F0 = rad(180);
		enmCreateA("Attackgirl01", 218f, 128f+RANDF2*10f, 50, 100, 1);
		wait(10);
	}
}

void MainSub01c(){
	times(7){
		F0 = rad(180);
		enmCreateA("Attackgirl02", 20f+RANDF*20f, -10f, 50, 100, 1);
		wait(10);
		F0 = rad(0);
		enmCreateA("Attackgirl02", -20f-RANDF*20f, -10f, 50, 100, 1);
		wait(10);
	}
	MainSub01b() async;
	times(7){
		F0 = rad(180);
		enmCreateA("Attackgirl02", 40f+RANDF*20f, -10f, 50, 100, 1);
		wait(10);
		F0 = rad(0);
		enmCreateA("Attackgirl02", -40f-RANDF*20f, -10f, 50, 100, 1);
		wait(10);
	}
	MainSub01a() async;
	times(7){
		F0 = rad(180);
		enmCreateA("Attackgirl02", 60f+RANDF*20f, -10f, 50, 100, 1);
		wait(10);
		F0 = rad(0);
		enmCreateA("Attackgirl02", -60f-RANDF*20f, -10f, 50, 100, 1);
		wait(10);
	}
}

void Attackgirl01(){
	flagSet(4);
	anmSelect(2);
	anmSetMain(0, (RAND%2)*5);
	moveVel(F0, 3f);
	wait(10);
	moveVelTime(60, 1, F0, 4f);
	flagClear(4);
	Attackgirl();
}

void Attackgirl02(){
	flagSet(8);
	anmSelect(2);
	anmSetMain(0, (RAND%2)*5);
	moveVel(rad(90), 4f);
	wait(10);
	moveVelTime(60, 1, F0, 7f);
	flagClear(8);
	Attackgirl();
}

void MainSub02()
{	
	//2 fées sniper postées en haut à droite et à gauche de l'écran
	F0 = rad(180);
	enmCreate("SniperGirl_01", -160f, -40f, 1400, 1000, 1);
	F0 = rad(0);
	enmCreate("SniperGirl_01", 160f, -40f, 1400, 1000, 1);
	wait(200);
	MainSub02a() async;
	wait(200);
	F0 = rad(270);
	enmCreate("SniperGirl_01", 0f, -40f, 1400, 1000, 1);
	MainSub02a() async;
	wait(200);
	F0 = rad(180);
	enmCreate("SniperGirl_01", -160f, -40f, 1000, 1000, 1);
	F0 = rad(0);
	enmCreate("SniperGirl_01", 160f, -40f, 1000, 1000, 1);
	wait(500);
	while(ENM_CNT > 2){
		+1:
	}
}
void MainSub02a(){
	times(30){
		enmCreate("AssistGirl01", RANDF2*150f, -15f, 100, 10, 1);
		wait(30);
	}

}

void AssistGirl01(){
	anmSelect(2);
	anmSetMain(0, 162);
	dropExtra(2, 1);
	AssistGirl();
}

void AssistGirl(){
	moveVel(rad(90)+RANDF2*rad(10), 1f);
	flagSet(8);
	wait(30);
	AssistGirl_at() async;
	flagClear(8);
	while(1){+1:}
}

void AssistGirl_at(){
	etNew(0);
	etAim(0, 8);
	etCount(0, 1:2:2:2, 1);
	etAngle(0, rad(90), rad(20));
	etSpeed(0, 2f, 3f:3f:3f:1f);
	etSprite(0, 6, 5);
	times(10){
		etOn(0);
		wait(60);
	}
}

void SniperGirl_01(){
	anmSelect(2);
	anmSetMain(0, 167);
	anmSetSprite(1, ENM_AURA_L_PURPLE);
	flagSet(8);
	moveVel(rad(90), 4f);
	wait(30);
	moveVel(rad(90), 0f);
	SniperGirl();
}

void MainSub03(){
	times(5){
		enmCreate("TerroristGirl01", RANDF2*160f, -30f, 400, 1000, 1);
		wait(100);
	}
	wait(100);
	times(7){
		enmCreate("TerroristGirl01", RANDF2*160f, -30f, 400, 1000, 1);
		wait(50);
	}
}

void TerroristGirl01(){
	anmSelect(2);
	anmSetMain(0, 167);
	anmSetSprite(1, ENM_AURA_L_RED);
	dropExtra(2, 2);
	flagSet(8);
	TerroristGirl() async;
	wait(60);
	flagClear(8);
	waitInfinite();
}
void waitInfinite(){
	while(1){+1:}
}
void TerroristGirl(){
	float A = rad(0);
	F1 = 200f + RANDF*120f;
	I0 = ID;
	I1 = 1;
	times(4:6:8:8){
		F0 = A;
		enmCreate("Bombs", 0f, 0f, 200, 0, 0);
		A += rad(360)/(4f:6f:8f:8f);
	}
	moveVel(rad(90), 3f);
	setDeath("Explode");
	//runs down the screen and explode when at a certain height
	//if it's killed before, explode anyway
}

void explosionAnm(){
	if(I1 == 1){
		I1 = 0;
		anmPlay(1, EFF_EXPLODE_RED+10);
	}
	playSound(6);
	wait(60);
	I1 = 1;
	waitInfinite();
}
void Explode(){
	etClear(21f);
}

void Bombs(){
	moveVelRel(rad(90), 3f);
	anmSelect(2);
	anmSetSprite(0, 53);
	moveCircle(F0, 0.05f, 20f, 0f);
	setDeath("BombsExplode");
	while(REL_Y < F1){
	+1:
	}
	setDeath("");
	BombsExplode();
	die();
}


void BombsExplode(){
	etNew(0);
	etOn(0);
	//boules de feu oranges: grand cercle rapide, angle aléatoire
	//boules de feu violettes: petit cercle angle aléatoire lent
	//petites étoiles aléatoires
	//animation d'explosion (EFF_EXPLODE_RED)
	//bruit d'explosion
	enmCall(I0, "explosionAnm");
}


void MapleEnemy()
{
    var A;
    flagSet(32);
    $A = 60;
    goto MapleEnemy_164 @ 0;
MapleEnemy_120:
    anmPlayAbs(1, 103);
    wait(4);
MapleEnemy_164:
    if ($A--) goto MapleEnemy_120 @ 0;
    goto MapleEnemy_276 @ 0;
MapleEnemy_232:
    anmPlayAbs(1, 103);
    wait(5);
MapleEnemy_276:
    if (1) goto MapleEnemy_232 @ 0;
    delete();
}

void main()
{
    flagSet(32);
    wait(1);
    setChapter(0);
    enmMapleEnemy("MapleEnemy", 0, 0, 100, 1000, 0);
    unless ($SPELL_ID >= 0) goto main_492 @ 0;
    unless ($SPELL_ID <= 1) goto main_368 @ 0;
    @MainMBossSpell();
    goto main_404 @ 0;
main_368:
    @MainBossSpell();
main_404:
    goto main_448 @ 0;
main_428:
    wait(1000);
main_448:
    if (1) goto main_428 @ 0;
main_492:
    debug22(1, "MainMBossDebug");
    debug22(2, "MainBossDebug");
    debug22(3, "MainBossDebug2");
    debug22(4, "MainMsgDebug");
    debug22(5, "MainLatter");
    @LogoEnemy() async;
+60: //60
    nop();
	// wait(100000);
    // @MainFront();
    // etClear(640.0f);
    // setChapter(3);
    // wait(2);
    // enmCreateA("MBoss", 192.0f, -32.0f, 40, 1000, 1);
	// bossWait();
    @MainLatter();
    // wait(300);
    // wait(60);
    // enmKillAll();
    // etClear(640.0f);
    // setChapter(41);
    // wait(160);
    // dialogRead(0);
    @MainBoss();
    goto main_1140 @ 60;
main_1120:
    wait(1000);
main_1140:
    if (1) goto main_1120 @ 60;
    delete();
}
