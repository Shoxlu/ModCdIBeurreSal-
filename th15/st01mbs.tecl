#include "main.tecl"


void BossItemPhase(var A, var B, var C);

void BossItemCard();

void EffChargePoint3(var A, var B, var C, var D, var E, var F);

void MBoss()
{
    setBoss(0);
    $MISS_COUNT = 0;
    $BOMB_COUNT = 0;
    $CAPTURE = 1;
    enmKillAll();
    timerReset();
    enmCreate("Ecl_EtBreak_ni", 0.0f, 0.0f, 9999, 0, 0);
    anmSelect(1);
    anmSetSprite(1, 107);
    anmSelect(3);
    anmSetMain(0, 0);
    flagSet(76);
    setHurtbox(48.0f, 48.0f);
    setHitbox(40.0f, 40.0f);
    lifeSet(10000);

    setNext(1, 0, 1500, "MBossDead");
!HL
	setNext(1, 1800, 1500, "MBossCard1");
	
	lifeMarker(0, 1800.0f, -8355585);
!*
    setTimeout(1, "MBossEscape");
    fog(128.0f, 9408511);
    movePos(-192.0f, -64.0f);
    movePosTime(100, 4, 0.0f, 128.0f);
    wait(70);
    moveLimit(0.0f, 128.0f, 280.0f, 256.0f);
    unless ($SPELL_ID >= 0) goto MBoss_984 @ 0;
    unless (($SPELL_ID >= 0) && ($SPELL_ID <= 1)) goto MBoss_984 @ 0;
    wait(50);
    lifeSet(1300);
    @MBossCard1();
MBoss_984:
    @MBoss1();
    while(1)
	{
		wait(10000);
	}
}

void MBoss1()
{
    @EffChargePoint3(1.5707964f, 0.5235988f, 8, 3, 3, 7);
	moveLimit(0.0f, 128.0f, 280.0f, 96.0f);
    // !ENH
	@MBoss1_at(0, rad(180), 1) async;
	@MBoss1_at(1, rad(0), 3) async;
	@MBoss1_at(2, rad(90), 2) async;
// !L 
	// @Boss1_at(0, rad(195), 1) async;
	// @Boss1_at(1, rad(25), 3) async;
	// @Boss1_at(2, rad(100), 2) async;
// !*
	wait(120);
	while(1)
	{
		moveRand(40, 0, 2f);
		wait(160);
	}
	wait(100000);
}

void MBoss1_at(int etID, float A, int color)
{
	etNew(etID);
	etAim(etID, 1);
	etCount(etID, 2:2:2:2, 1);
	etSprite(etID, 22, color);
	etSpeed(etID, 3f, 3f);
	etAngle(etID, rad(0), 0f);
	float Angle = A;
	etExSet(etID, 0, 0, EX_ANIM, 0, NEG, NEGF, NEGF);
	while(1)
	{
		etAngle(etID, Angle, rad(45):rad(45):rad(45):rad(45));
		etOn(etID);
!ENH
		Angle = Angle + rad(17.5);
!L
		Angle = Angle + rad(17.3);
!*
		wait(5:4:3:2);
	}
}

void MBossCard1()
{
+2: //2
    setChapter(31);
+2: //4
    ins_569(1);
    @BossItemCard();
    timerReset();
    killAllAsync();
    enmKillAll();
    unless ($TIMEOUT == 0) goto MBossCard1_244 @ 0;
    etCancel(640.0f);
    goto MBossCard1_264 @ 0;
MBossCard1_244:

    etClear(640.0f);
MBossCard1_264:
    spellEnd();
    funcSet(0);
    reset();
    playSound(27);
    moveVel(0.0f, 0.0f);
    moveVelTime(0, 0, 0.0f, 0.0f);
    movePosTime(0, 0, 0.0f, 0.0f);
    $MISS_COUNT = 0;
    $BOMB_COUNT = 0;
    $CAPTURE = 1;
    setNext(0, 0, 2500, "MBossDead");
    spell3(0, 2500, 500000, "氷符「アルティメットブリザード」");
    movePosTime(60, 4, 0.0f, 144.0f);
    moveLimit(0.0f, 128.0f, 280.0f, 64.0f);
    wait(60);
    anmPlay(1, 73);
+60: //60
    nop();
	MBossCard1_at();
}


float power(float base, int exp)
{
	float A = 1f;
	times(exp)
	{
		 A *= base;
	}
	return A;
}


void MBossCard1_at()
{
	float A = rad(0);
	float AInc = rad(-360);
	int exp = 2;
	float B = 1f;
	etNew(0);
	etAim(0, 3);
	etCount(0, 8, 1);
	etSprite(0, 20, 3);
	etSpeed(0, 3f:3f:2f:3f, 3f);
	etAngle(0, A, 0f);
	etDist(0, 16f);
	etEx(0, 0, EX_ANIM, 1, NEG, NEGF, NEGF);
	etEx(0, 0, EX_WAIT, 20:20:20:15, NEG, NEGF, NEGF);
	etEx(0, 0, EX_SETSPRITE, 20, 2, NEGF, NEGF);
	while(1)
	{
		times(2)
		{
			times(90)
			{
				etOn(0);
				A += power(AInc, exp)*1f:1f:1f:0.5f;
				// AInc = A;
				AInc += rad(4)*B;
				etAngle(0, A, rad(0));
				wait(4);
			}
			B *= -1f;
		}
		exp += 1;
	}
}



void MBossDead()
{
    spellEnd();
    enmKillAll();
    unless ($DIFF <= 1) goto MBossDead_384 @ 0;
    unless ($TIMEOUT == 0) goto MBossDead_304 @ 0;
    enmCreate("Ecl_EtBreak", 0.0f, 0.0f, 9999, 0, 0);
    goto MBossDead_360 @ 0;
MBossDead_304:
    enmCreate("Ecl_EtBreak_ni", 0.0f, 0.0f, 9999, 0, 0);
MBossDead_360:
    goto MBossDead_528 @ 0;
MBossDead_384:
    unless ($TIMEOUT == 0) goto MBossDead_508 @ 0;
    etCancel(640.0f);
    goto MBossDead_528 @ 0;
MBossDead_508:
    etClear(640.0f);
MBossDead_528:
    anmPlay(1, 65);
    moveLimitReset();
    lifeSet(100000);
!E
    20;
!N
    20;
!H
    20;
!LO
    30;
!*
    @BossItemPhase([-1], 10, 48.0f);

    ins_570();
    flagSet(3);
	fogTime(60, 0, -11534256, 600.0f, 1800.0f);
    setScreenShake(30, 12, 0);
    anmPlay(0, 28);
    playSound(5);
    setChapter(5);
	wait(60);
	movePosTime(60, 1, 270f, -120f);
	wait(60);
    setBoss(-1);
    delete();
}

void MBossEscape()
{
    setNext(0, -1, 0, "");
    setNext(1, -1, 0, "");
    spellEnd();
    moveLimitReset();
    enmKillAll();
    unless ($TIMEOUT == 0) goto MBossEscape_280 @ 0;
    etCancel(640.0f);
    goto MBossEscape_300 @ 0;
MBossEscape_280:
    etClear(640.0f);
MBossEscape_300:
    lifeSet(100000);
    fogTime(60, 0, -11534256, 600.0f, 1800.0f);
    setChapter(2);
    flagSet(16);
    movePosTime(60, 4, 0.0f, -32.0f);
    wait(10);
    setBoss(-1);
    wait(50);
    delete();
    delete();
}
